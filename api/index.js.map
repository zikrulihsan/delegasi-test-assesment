{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/context.ts", "../app/createEmotionCache.ts", "../app/root.tsx", "../app/routes/route-with-error.tsx", "../app/routes/detailReport.tsx", "../app/component/CustomAppBar.tsx", "../app/constant.tsx", "../app/routes/index.tsx", "../app/container/dashboard/DashboardContainer.tsx", "../app/component/CustomCard.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { renderToString } from 'react-dom/server';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport { type EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport 'dotenv/config';\n\nimport { ServerStyleContext } from './context';\nimport { createEmotionCache } from './createEmotionCache';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import * as React from \"react\"\n\nexport interface ServerStyleContextData {\n    key: string\n    ids: Array<string>\n    css: string\n}\n\nexport const ServerStyleContext = React.createContext<ServerStyleContextData[] | null>(null)\n\nexport interface ClientStyleContextData {\n    reset: () => void\n}\n\nexport const ClientStyleContext = React.createContext<ClientStyleContextData | null>(null)", "import createCache from '@emotion/cache';\n\nexport function createEmotionCache() {\n  return createCache({ key: 'css' });\n}\n", "import React from 'react';\nimport { type MetaFunction } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from '@remix-run/react';\nimport { VStack, Heading, ChakraProvider, Text } from '@chakra-ui/react';\nimport { withEmotionCache } from '@emotion/react';\n\nimport { ServerStyleContext, ClientStyleContext } from './context';\n\nexport const meta: MetaFunction = () => {\n  return { title: 'Chakra UI Boilerplate' };\n};\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>There was an error</Heading>\n        <Text>{error.message}</Text>\n        <hr />\n        <Text>\n          Hey, developer, you should replace this with what you want your users\n          to see.\n        </Text>\n      </VStack>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  let caught = useCatch();\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </Text>\n      );\n      break;\n    case 404:\n      message = (\n        <Text>\n          Oops! Looks like you tried to visit a page that does not exist.\n        </Text>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document>\n      <VStack h=\"100vh\" justify=\"center\">\n        <Heading>\n          {caught.status}: {caught.statusText}\n        </Heading>\n        {message}\n      </VStack>\n    </Document>\n  );\n}\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverSyleData = React.useContext(ServerStyleContext);\n    const clientStyleData = React.useContext(ClientStyleContext);\n\n    // Only executed on client\n    React.useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no\"\n          />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstaticom\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <Meta />\n          <Links />\n          {serverSyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(' ')}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === 'development' ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n", "import { Box, Heading, Text } from '@chakra-ui/react';\nimport { type MetaFunction } from '@remix-run/node';\n\n// https://remix.run/api/conventions#meta\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Error route',\n    description: 'Generate Text missing error',\n  };\n};\n\nexport function CatchBoundary() {\n  return (\n    <Box>\n      <Heading as=\"h2\">I caught some condition</Heading>\n    </Box>\n  );\n}\n\nexport function ErrorBoundary({ error }: any) {\n  return (\n    <Box bg=\"red.400\" px={4} py={2}>\n      <Heading as=\"h3\" size=\"lg\" color=\"white\">\n        Something is really wrong!\n      </Heading>\n      <Box color=\"white\" fontSize={22}>\n        {error.message}\n      </Box>\n    </Box>\n  );\n}\n\n// Don't import Text from @chakra-ui/react\n// If you do the error won't be thrown\nexport default function RouteWithError() {\n  return (\n    <Box>\n      <Text>If you see this then you imported Text</Text>\n    </Box>\n  );\n}\n", "import { CloseIcon } from '@chakra-ui/icons';\nimport { Box, Flex, IconButton, Link, Text, useBoolean } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport CustomAppBar from '~/component/CustomAppBar';\nimport { InitialData, LABA_RUGI_URL, NERACA_URL } from '~/constant';\n\nexport default function DashboardContainer() {\n\n  const [dataLabaRugi, setDataLabaRugi] = useState(InitialData)\n  const [dataNeraca, setDataNeraca] = useState(InitialData)\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    await axios.get(LABA_RUGI_URL)\n          .then(res => {\n            setDataLabaRugi(res.data.details)\n          })\n    await axios.get(NERACA_URL)\n          .then(res => {\n            setDataNeraca(res.data.details)\n          })\n  }\n\n  const [isProfit, setIsProfit] = useBoolean()\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"space-between\"\n      backgroundColor=\"gray.100\"\n      textAlign=\"center\"\n      width=\"100%\"\n      pb='100'\n    >\n      <CustomAppBar/>\n      <Box \n        pos=\"fixed\"\n        top={2}\n        right={3}\n      >\n        <Link href='/'>\n          <IconButton\n              icon={(<CloseIcon w={4} h={4} />) }\n              variant={'ghost'}\n              aria-label={'Toggle Navigation'}\n          />\n        </Link>\n      </Box>\n      \n      <Text align=\"center\" mt=\"24\">\n        <b>LAPORAN KEUANGAN</b>\n      </Text>\n      \n      <Text fontSize=\"s\" textColor=\"grey\" mb='2'>\n        Periode Januari 2023\n      </Text>\n      <Flex justifyContent=\"center\" mb=\"4\" borderWidth=\"1\" dropShadow=\"lg\" textColor=\"grey.100\">\n          <Text onClick={setIsProfit.toggle} as=\"button\" padding=\"2\" backgroundColor={isProfit ? \"grey\" : \"white\"} borderLeftRadius={10}>Neraca</Text>\n          <Text onClick={setIsProfit.toggle} as=\"button\" padding=\"2\" backgroundColor={!isProfit ? \"grey\" : \"white\"} borderRightRadius={10}>Laba Rugi</Text>\n      </Flex>\n\n      {!isProfit ? dataNeraca.length == 1 ? <Text height=\"500\">Loading...</Text> : \n          dataNeraca.map((category) => <Box>\n          <Text>\n            <b>{category.label.toUpperCase()}</b>\n          </Text>\n          \n          {category.details.map((type) =>  \n          <Box textAlign=\"left\" mx=\"8\" mb=\"4\">\n            <Text color=\"blue.600\">\n              <b>{type.label}</b>\n            </Text>\n            {type.children?.map((detail) => <>\n              <Flex justifyContent=\"space-between\" fontSize=\"sm\" mt=\"1\">\n                <Text>\n                  <b>{detail.label}</b>\n                </Text>\n                <Text>\n                  {`Rp ${new Intl.NumberFormat('en-DE').format(detail.value)}`}\n                </Text>\n              </Flex> \n              {detail.details?.map((datum) => \n                <Flex ml=\"2\" justifyContent=\"space-between\" fontSize=\"sm\">\n                    <Text>\n                      {datum.label}\n                    </Text>\n                    <Text>\n                      {`Rp ${new Intl.NumberFormat('en-DE').format(datum.value)}`}\n                    </Text>\n                </Flex>\n              )}\n              </>\n            )}\n            {type.details?.map((detail) => \n              <>\n              <Flex justifyContent=\"space-between\" fontSize=\"sm\">\n                <Text>\n                  <b>{detail.label}</b>\n                </Text>\n                <Text>\n                <Text>\n                  {`Rp ${new Intl.NumberFormat('en-DE').format(detail.value)}`}\n                </Text>\n                </Text>\n              </Flex> \n              {detail.details?.map((datum) => \n                <Flex ml=\"2\" justifyContent=\"space-between\" fontSize=\"sm\">\n                    <Text>\n                      {datum.label}\n                    </Text>\n                    <Text>\n                      {`Rp ${new Intl.NumberFormat('en-DE').format(datum.value)}`}\n                    </Text>\n                </Flex>\n              )}\n              </>\n            )}\n                     \n          </Box>)}        \n        </Box>)\n      : dataLabaRugi.length == 1 ? <Text height=\"500\">Loading...</Text> : \n      dataLabaRugi.map((category) =>  <Box textAlign=\"left\" mx=\"8\" >\n      <Flex justifyContent=\"space-between\" fontSize=\"sm\">\n        <Text mt=\"1\">\n          <b>{category.label}</b>\n        </Text>\n        <Text>\n          {`Rp ${new Intl.NumberFormat('en-DE').format(category.value)}`}\n        </Text>\n      </Flex>\n      \n      {category.details.map((type) =>  \n        <Flex justifyContent=\"space-between\" fontSize=\"sm\">\n          <Text ml=\"2\">\n            {type.label}\n          </Text>\n          <Text>\n            {`Rp ${new Intl.NumberFormat('en-DE').format(type.value)}`}\n          </Text>\n        </Flex>\n        )}    \n      </Box>)}\n    </Flex>) \n}\n", "import { Box, Button, Flex, Image, Link, Stack, Text, useBoolean, useColorModeValue } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport CustomCard from '~/component/CustomCard';\nimport { DASHBOARD_TYPE_CASHFLOW, DASHBOARD_TYPE_COST_OPERATION, DASHBOARD_TYPE_CURRENT_BALANCE, DASHBOARD_TYPE_PROFIT, DASHBOARD_TYPE_REMAINING_DEBT } from '~/constant';\n\nexport default function CustomAppBar() {\n\n  return (\n    <Flex\n        bg={useColorModeValue('white', 'gray.800')}\n        color={useColorModeValue('gray.600', 'white')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        position=\"fixed\"\n        px={{ base: 4 }}\n        borderBottom={1}\n        width={{ base: '100%', md: '380px' }}\n        borderStyle={'solid'}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\n        align={'center'}\n        >\n        <Image\n            src={\n            'https://uploads-ssl.webflow.com/62af9fefd2f730861971dce1/62afe5cb0139380cff95569e_logoMain.png'\n            }\n            height=\"30px\"\n        />\n    </Flex>\n  );\n}\n", "export const DASHBOARD_TYPE_CASHFLOW = \"Aliran Kas\"\nexport const DASHBOARD_TYPE_REMAINING_DEBT = \"Hutang Piutang\"\nexport const DASHBOARD_TYPE_PROFIT = \"Profit\"\nexport const DASHBOARD_TYPE_CURRENT_BALANCE = \"Saldo di Tangan\"\nexport const DASHBOARD_TYPE_COST_OPERATION = \"Biaya Operasional\"\nexport const DASHBOARD_TYPE_COST_DISCOUNT = \"Diskon Penjualan\"\n\nexport const LABA_RUGI_URL = \"https://my-json-server.typicode.com/Delegasi-Tech/data-dummy/laporan_laba_rugi\"\nexport const NERACA_URL = \"https://my-json-server.typicode.com/Delegasi-Tech/data-dummy/laporan_neraca\"\n\nexport interface IData {\n    label: string\n    details: Array<IDetailData>\n    value: number\n}\n  \ninterface IDetailData  {\n    label: string\n    children?: Array<IDetailData>\n    details?: Array<IDetailData>\n    value: number\n}\n\ninterface IChildrenData {\n    label: string\n    details: Array<IData>\n    value: number\n}\n\nexport const InitialData: Array<IData> = [\n{\n    label: \"\",\n    details: [\n    {\n        label: \"\",\n        children: [\n        {\n            label: \"\",\n            details: [\n            {\n                label: \"\",\n                details: [\n                \n                ],\n                value: 0\n            }\n            ],\n            value: 0\n        }\n        ],\n        value: 0\n    }\n    ],\n    value: 0\n}\n]\n", "import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useDisclosure,\n  Image,\n} from '@chakra-ui/react';\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n} from '@chakra-ui/icons';\nimport DashboardContainer from '~/container/dashboard/DashboardContainer';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { InitialData, LABA_RUGI_URL, NERACA_URL } from '~/constant';\n\nexport default function WithSubnavigation() {\n  const { isOpen, onToggle } = useDisclosure();\n  \n  const [dataLabaRugi, setDataLabaRugi] = useState(InitialData)\n  const [dataNeraca, setDataNeraca] = useState(InitialData)\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n\n  const getData = async () => {\n    await axios.get(LABA_RUGI_URL)\n          .then(res => {\n            setDataLabaRugi(res.data.details)\n          })\n    await axios.get(NERACA_URL)\n          .then(res => {\n            setDataNeraca(res.data.details)\n          })\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      width=\"full\"\n      background=\"gray.200\"\n    >\n      <Box\n        minWidth=\"375px\"\n        width={{ base: '100%', md: '380px' }}\n        borderColor=\"gray.200\"\n        minHeight=\"200px\"\n        position=\"relative\"\n        bg=\"white\"\n      >\n        <Stack\n          spacing={14}\n        >\n          <Flex\n            bg={useColorModeValue('white', 'gray.800')}\n            color={useColorModeValue('gray.600', 'white')}\n            minH={'60px'}\n            py={{ base: 2 }}\n            position=\"fixed\"\n            px={{ base: 4 }}\n            borderBottom={1}\n            width={{ base: '100%', md: '380px' }}\n            borderStyle={'solid'}\n            borderColor={useColorModeValue('gray.200', 'gray.900')}\n            align={'center'}\n          >\n            <Flex\n              flex={{ base: 1 }}\n              ml={{ base: -2 }}\n              display={{ base: 'flex' }}\n            >\n              <IconButton\n                onClick={onToggle}\n                icon={\n                  isOpen ? (\n                    <CloseIcon w={3} h={3} />\n                  ) : (\n                    <HamburgerIcon w={5} h={5} />\n                  )\n                }\n                variant={'ghost'}\n                aria-label={'Toggle Navigation'}\n              />\n            </Flex>\n            <Flex flex={{ base: 1 }} justify={{ base: 'center' }}>\n              <Box>\n                <Image\n                  src={\n                    'https://uploads-ssl.webflow.com/62af9fefd2f730861971dce1/62afe5cb0139380cff95569e_logoMain.png'\n                  }\n                  height=\"30px\"\n                />\n              </Box>\n            </Flex>\n\n            <Stack\n              flex={{ base: 1 }}\n              justify={'flex-end'}\n              direction={'row'}\n              spacing={6}\n            ></Stack>\n          </Flex>\n          <Collapse in={isOpen} animateOpacity>\n            <MobileNav />\n          </Collapse>\n          {dataLabaRugi.length == 1 || dataNeraca.length == 1 ? <Text align=\"center\">Loading...</Text> : <DashboardContainer dataLabaRugi={dataLabaRugi} dataNeraca={dataNeraca}/>}\n          \n        </Stack>\n      </Box>\n    </Box>\n  );\n}\n\nconst MobileNav = () => {\n  return (\n    <Stack bg={useColorModeValue('white', 'gray.800')} p={4}>\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.600', 'gray.200')}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\n          align={'start'}\n        >\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: 'Dashboard',\n    href: '/',\n  },\n  {\n    label: 'Custom Page',\n    href: '#',\n  },\n];\n", "import { Box, Button, Flex, Link, Text, useBoolean } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport CustomCard from '~/component/CustomCard';\nimport { DASHBOARD_TYPE_CASHFLOW, DASHBOARD_TYPE_COST_DISCOUNT, DASHBOARD_TYPE_COST_OPERATION, DASHBOARD_TYPE_CURRENT_BALANCE, DASHBOARD_TYPE_PROFIT, DASHBOARD_TYPE_REMAINING_DEBT, IData } from '~/constant';\n\nexport default function DashboardContainer(props: any) {\n  const data = {\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      alignItems=\"space-between\"\n      backgroundColor=\"gray.100\"\n      textAlign=\"center\"\n      width=\"100%\"\n    >\n      <Text align=\"center\" mt=\"4\">\n        <b>LAPORAN KEUANGAN</b>\n      </Text>\n      <Text fontSize=\"s\" textColor=\"grey\" mb='2'>\n        Periode Januari 2023\n      </Text>\n\n      <CustomCard dashboardType={DASHBOARD_TYPE_PROFIT} dataLabaRugi={props.dataLabaRugi}/>\n      <CustomCard dashboardType={DASHBOARD_TYPE_COST_OPERATION} dataLabaRugi={props.dataLabaRugi}/>\n      <CustomCard dashboardType={DASHBOARD_TYPE_COST_DISCOUNT} dataLabaRugi={props.dataLabaRugi} />\n      \n      {/* <CustomCard dashboardType={DASHBOARD_TYPE_CURRENT_BALANCE}/> */}\n\n      <Link borderRadius=\"10\" backgroundColor=\"blue.500\" py=\"2\" color=\"white\" m=\"4\" colorScheme='blue' href='/detailReport'>Lihat Detail Laporan Keuangan</Link>\n    </Flex>\n  );\n}\n", "import { Box, Flex, Text, extendTheme, Progress } from '@chakra-ui/react';\nimport { Bar, Doughnut, Line, Pie, Scatter } from 'react-chartjs-2';\nimport { \n    Chart as ChartJS, \n    ArcElement, \n    Tooltip, \n    Legend, \n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    BarElement\n} from 'chart.js';\nimport { useEffect, useState } from 'react';\nimport { DASHBOARD_TYPE_CASHFLOW, DASHBOARD_TYPE_COST_DISCOUNT, DASHBOARD_TYPE_COST_OPERATION, DASHBOARD_TYPE_CURRENT_BALANCE, DASHBOARD_TYPE_PROFIT, DASHBOARD_TYPE_REMAINING_DEBT, IData } from '~/constant';\n\nChartJS.register(ArcElement);\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  );\n\nexport default function CustomCard(props: any) {\n \n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom' as const,\n      },\n      title: {\n        display: false,\n      },\n    },\n  };\n\n  const getValueByLabel = (label: string) => {\n    let value = props.dataLabaRugi.filter((item: IData) => item.label == label)[0][\"value\"]\n    return value\n  }\n\n  const getDetailsByLabel = (label: string) => {\n    let value = props.dataLabaRugi.filter((item: IData) => item.label == label)\n    console.log(value)\n    return value\n  }\n\n\n  const getFormattedText = (value: number) => {\n    return `Rp ${new Intl.NumberFormat('en-DE').format(value)}`\n  }\n\n  const getProfitPercentage = () => {\n    return getValueByLabel(\"Laba Usaha\")/getValueByLabel(\"Pendapatan Bersih\") * 100\n  }\n\n  let dataExplanation : string = \"\"\n\n  switch(props.dashboardType) {\n    case DASHBOARD_TYPE_PROFIT:\n      dataExplanation = \"(Pendapatan Bersih -  Jumlah HPP & Beban Operasional)\"\n      break;\n    case DASHBOARD_TYPE_CURRENT_BALANCE:\n      dataExplanation = \"(Jumlah Uang Yang Dimiliki)\"\n      break;\n    case DASHBOARD_TYPE_COST_DISCOUNT:\n      dataExplanation = \"(Jumlah Diskon vs Pendapatan vs Profit)\"\n      break;\n    case DASHBOARD_TYPE_COST_OPERATION:\n      dataExplanation = \"(Operasional yang berkaitan langsung dengan produksi)\"\n      break;   \n  }\n\n  let operationCostDataLabel: Array<string> = [] \n\n \n  let operationCostDataValue: Array<number> = [] \n\n  return (\n    <Box \n      borderRadius='md' \n      textAlign='start' \n      boxShadow=\"md\" \n      m='2' \n      p='4'\n      backgroundColor=\"white\"\n    >\n      <Text mb=\"0.5\">\n        <b>{props.dashboardType}</b>\n      </Text>\n      <Text mt=\"-1\" mb=\"1\" fontSize=\"xs\">\n        {dataExplanation}\n      </Text>\n\n      {props.dashboardType === DASHBOARD_TYPE_CURRENT_BALANCE ?\n          <Box fontSize=\"sm\">\n            <Text fontSize=\"xl\">\n              <b>Rp. 127.000.000</b>\n            </Text>\n            <Flex justifyContent=\"space-between\" >\n              <Text>\n                BANK BRI\n              </Text> \n              <Text>\n                Rp. 127.000.000\n              </Text> \n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text>\n                UANG DI TANGAN\n              </Text> \n              <Text>\n                Rp. 127.000.000\n              </Text> \n            </Flex>\n          </Box>\n          : <></>}\n    \n      {props.dashboardType === DASHBOARD_TYPE_PROFIT ?\n      <>\n      <Text fontSize=\"xl\" mb=\"2\" >\n        <b>{getFormattedText(getValueByLabel(\"Laba Usaha\"))}</b>\n      </Text>\n      <Flex\n        justifyContent=\"center\"\n        mb=\"4\"\n      >\n        <Box textAlign=\"center\" borderLeftRadius={5} backgroundColor=\"gray.100\" flex=\"1\">\n          <Text fontSize=\"xs\" mt=\"1\">\n            Pendapatan Bersih\n          </Text>\n          <Text mb=\"2\">\n            <b>{getFormattedText(getValueByLabel(\"Pendapatan Bersih\"))}</b>\n          </Text>\n       </Box>\n       <Box borderRightRadius={5} textAlign=\"center\" backgroundColor=\"red.100\" flex=\"1\" >\n          <Text fontSize=\"xs\" mt=\"1\">\n            Beban Operasional + HPP\n          </Text>\n          <Text>\n            <b>{getFormattedText(getValueByLabel(\"Harga Pokok Penjualan\")/100 + getValueByLabel(\"Beban\") )}</b>\n          </Text>\n        </Box>\n      </Flex> \n      </>: <></> }\n\n      {props.dashboardType == DASHBOARD_TYPE_PROFIT ?\n        <Box fontSize=\"sm\">\n          <Text fontSize=\"sm\" mb=\"2\" >\n            <b>Rasio profit dari pendapatan bersih</b>\n          </Text>\n        \n          <Flex justifyContent=\"space-between\">\n            <Box backgroundColor=\"blue.500\" width=\"4\" height=\"4\" mr=\"1\" mb=\"1\"></Box>\n            <Flex justifyContent=\"space-between\" flex={1}>\n              <Text>\n                {`Profit (${getProfitPercentage().toFixed(2)}%)`} \n              </Text> \n            </Flex>\n          </Flex>\n          <Flex justifyContent=\"space-between\">\n            <Box backgroundColor=\"red\" width=\"4\" height=\"4\" mr=\"1\" mb=\"1\"></Box>\n            <Flex justifyContent=\"space-between\" flex={1}>\n              <Text>\n              {`Beban Operasional dan HPP (${(100 - getProfitPercentage()).toFixed(2)}%)`} \n              </Text> \n            </Flex>\n          </Flex>\n          \n          <Progress position=\"static\" value={getProfitPercentage()} backgroundColor=\"red\" height=\"25px\" mt=\"3\" mb=\"1\" borderLeftRadius={5} borderRightRadius={5}/>   \n          <Box width=\"full\" height=\"2\" backgroundColor=\"gray.400\"></Box>\n          <Text fontSize=\"xs\" mb=\"2\" align=\"center\">\n            Total Pendapatan Bersih\n          </Text>\n          \n        </Box>\n      :<></>}\n      \n      {props.dashboardType === DASHBOARD_TYPE_COST_DISCOUNT ?\n      <>\n        <Text fontSize=\"lg\">\n          <b>{getFormattedText(getValueByLabel(\"Diskon Penjualan\"))}</b>\n        </Text>\n        <Text fontSize=\"sm\" my={4} align=\"center\">\n          <b>Diskon Terhadap Laba dan Pendapatan</b>\n        </Text>\n        {props.dataLabaRugi == undefined ? <Text>Loading...</Text>\n        : <Bar\n          data={\n            {\n              labels: ['Jumlah Uang dalam Rupiah'],\n              datasets: [\n                {\n                  label: 'Diskon Penjualan',\n                  data: [getValueByLabel(\"Diskon Penjualan\")],\n                  backgroundColor: [\n                    'rgba(54, 162, 235, 0.2)',\n                  ],\n                  borderColor: [\n                    'rgba(54, 162, 235, 1)',\n                  ],\n                  borderWidth: 1,\n                },\n                {\n                  label: 'Laba/Rugi',\n                  data: [getValueByLabel(\"Laba Usaha\")],\n                  backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                  ],\n                  borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                  ],\n                  borderWidth: 1,\n                },\n                \n                {\n                  label: 'Pendapatan Kotor',\n                  data: [getValueByLabel(\"Pendapatan Kotor\")],\n                  backgroundColor: [\n                    'rgba(0, 99, 132, 0.2)',\n                  ],\n                  borderColor: [\n                    'rgba(0, 99, 132, 1)',\n                  ],\n                  borderWidth: 1,\n                },\n                \n              ],\n            }\n          }\n          options={options}\n          height=\"300\"\n        /> }\n      </>\n    : <></> }\n\n      {props.dashboardType === DASHBOARD_TYPE_COST_OPERATION ?\n      <Box>\n        <Text fontSize=\"xl\" mb=\"2\">\n          <b>{getFormattedText(getValueByLabel(\"Beban\"))}</b>\n        </Text>\n        <Pie\n          data={\n            {\n              labels: operationCostDataLabel,\n              datasets: [\n                {\n                  label: '# Total Operational Cost',\n                  data: operationCostDataValue,\n                  backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(209, 150, 132, 0.2)',\n                    'rgba(60, 102, 235, 0.2)',\n                  ],\n                  borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(209, 99, 132, 1)',\n                    'rgba(60, 162, 235, 1)',\n                  ],\n                  borderWidth: 1,\n                },\n              ],\n            }\n          }\n          options={options}\n        /> \n        <Text></Text>\n        <Box mx=\"4\">\n          {props.dataLabaRugi == undefined ? <></> \n          : getDetailsByLabel(\"Beban\")[0].details.map((item: any) => {\n            operationCostDataLabel.push(item.label)\n            operationCostDataValue.push(item.value)\n            return <Flex justifyContent=\"space-between\">\n              <Text>\n                {item.label}\n              </Text> \n              <Text>\n                {getFormattedText(item.value)}\n              </Text> \n            </Flex> \n            }\n            )\n          }\n         \n        </Box>\n      </Box>\n      : <></> }      \n    </Box>\n  );\n}\n", "export default {'version':'3b420f88','entry':{'module':'/build/entry.client-VBOU6S43.js','imports':['/build/_shared/chunk-EGGKFETQ.js','/build/_shared/chunk-UVNMEZUQ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-NUKPOCST.js','imports':['/build/_shared/chunk-OLE23X5L.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/detailReport':{'id':'routes/detailReport','parentId':'root','path':'detailReport','index':undefined,'caseSensitive':undefined,'module':'/build/routes/detailReport-LMKOVE4I.js','imports':['/build/_shared/chunk-HHHLZRRX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-GR7SEB72.js','imports':['/build/_shared/chunk-HHHLZRRX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/route-with-error':{'id':'routes/route-with-error','parentId':'root','path':'route-with-error','index':undefined,'caseSensitive':undefined,'module':'/build/routes/route-with-error-DDK32HSE.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true}},'url':'/build/manifest-3B420F88.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/route-with-error.tsx\";\nimport * as route2 from \"./routes/detailReport.tsx\";\nimport * as route3 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/route-with-error\": {\n      id: \"routes/route-with-error\",\n      parentId: \"root\",\n      path: \"route-with-error\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/detailReport\": {\n      id: \"routes/detailReport\",\n      parentId: \"root\",\n      path: \"detailReport\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,oBAA+B,6BAC/B,eAA8B,2BAC9B,yBAAgC,qDAEhCA,gBAA4B,6BAC5B,gBAAO;;;ACLP,YAAuB,2BAQV,qBAA2B,oBAA+C,IAAI,GAM9E,qBAA2B,oBAA6C,IAAI;;;ACdzF,mBAAwB;AAEjB,SAAS,qBAAqB;AACnC,aAAO,aAAAC,SAAY,EAAE,KAAK,MAAM,CAAC;AACnC;;;AFkBQ;AAZO,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,MAAM,QAAQ,mBAAmB,GAC3B,EAAE,wBAAwB,QAAI,uBAAAC,SAAoB,KAAK,GAEvD,WAAO;AAAA,IACX,mDAAC,mBAAmB,UAAnB,EAA4B,OAAO,MAClC,6DAAC,8BAAc,OAAO,OACpB,6DAAC,6BAAY,SAAS,cAAc,KAAK,QAAQ,OAAjD;AAAA;AAAA;AAAA;AAAA,WAAsD,KADxD;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,EACF,GAEM,SAAS,wBAAwB,IAAI,GAErC,aAAS;AAAA,IACb,mDAAC,mBAAmB,UAAnB,EAA4B,OAAO,OAAO,QACzC,6DAAC,8BAAc,OAAO,OACpB,6DAAC,6BAAY,SAAS,cAAc,KAAK,QAAQ,OAAjD;AAAA;AAAA;AAAA;AAAA,WAAsD,KADxD;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,EACF;AAEA,yBAAgB,IAAI,gBAAgB,WAAW,GAExC,IAAI,SAAS,kBAAkB,UAAU;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA,EACX,CAAC;AACH;;;AG3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,gBAAkB,2BAElBA,gBAQO,6BACPA,gBAAsD,6BACtDA,gBAAiC;AAYzB,IAAAC,0BAAA,kCARK,OAAqB,OACzB,EAAE,OAAO,wBAAwB;AAG3B,SAAR,MAAuB;AAC5B,SACE,oDAAC,YACC,8DAAC,gCACC,8DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,SAAQ,KADV;AAAA;AAAA;AAAA;AAAA,SAEA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;AAEO,SAAS,cAAc,EAAE,MAAM,GAAqB;AACzD,iBAAQ,MAAM,KAAK,GAEjB,oDAAC,YACC,8DAAC,wBAAO,GAAE,SAAQ,SAAQ,UACxB;AAAA,wDAAC,yBAAQ,kCAAT;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,oDAAC,sBAAM,gBAAM,WAAb;AAAA;AAAA;AAAA;AAAA,WAAqB;AAAA,IACrB,oDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,oDAAC,sBAAK,6FAAN;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OAPF;AAAA;AAAA;AAAA;AAAA,SAQA,KATF;AAAA;AAAA;AAAA;AAAA,SAUA;AAEJ;AAEO,SAAS,gBAAgB;AAC9B,MAAI,aAAS,wBAAS,GAClB;AACJ,UAAQ,OAAO,QAAQ;AAAA,IACrB,KAAK;AACH,gBACE,oDAAC,sBAAK,0FAAN;AAAA;AAAA;AAAA;AAAA,aAGA;AAEF;AAAA,IACF,KAAK;AACH,gBACE,oDAAC,sBAAK,+EAAN;AAAA;AAAA;AAAA;AAAA,aAEA;AAEF;AAAA,IAEF;AACE,YAAM,IAAI,MAAM,OAAO,QAAQ,OAAO,UAAU;AAAA,EACpD;AAEA,SACE,oDAAC,YACC,8DAAC,wBAAO,GAAE,SAAQ,SAAQ,UACxB;AAAA,wDAAC,yBACE;AAAA,aAAO;AAAA,MAAO;AAAA,MAAG,OAAO;AAAA,SAD3B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACC;AAAA,OAJH;AAAA;AAAA;AAAA;AAAA,SAKA,KANF;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;AAMA,IAAM,eAAW;AAAA,EACf,CAAC,EAAE,SAAS,GAAkB,iBAAiB;AAC7C,QAAM,iBAAiB,cAAAC,QAAM,WAAW,kBAAkB,GACpD,kBAAkB,cAAAA,QAAM,WAAW,kBAAkB;AAG3D,yBAAAA,QAAM,UAAU,MAAM;AAEpB,mBAAa,MAAM,YAAY,SAAS;AAExC,UAAM,OAAO,aAAa,MAAM;AAChC,mBAAa,MAAM,MAAM,GACzB,KAAK,QAAQ,CAAC,QAAQ;AACpB,QAAC,aAAa,MAAc,WAAW,GAAG;AAAA,MAC5C,CAAC,GAED,2CAAiB;AAAA,IACnB,GAAG,CAAC,CAAC,GAGH,oDAAC,UAAK,MAAK,MACT;AAAA,0DAAC,UACC;AAAA,4DAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA;AAAA,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAGA;AAAA,QACA,oDAAC,UAAK,KAAI,cAAa,MAAK,kCAA5B;AAAA;AAAA;AAAA;AAAA,eAA2D;AAAA,QAC3D,oDAAC,UAAK,KAAI,cAAa,MAAK,6BAA5B;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,QACtD;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,KAAI;AAAA;AAAA,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAGA;AAAA,QACA,oDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,eAAM;AAAA,QACN,oDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,eAAO;AAAA,QACN,iDAAgB,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI,MACpC;AAAA,UAAC;AAAA;AAAA,YAEC,gBAAc,GAAG,OAAO,IAAI,KAAK,GAAG;AAAA,YACpC,yBAAyB,EAAE,QAAQ,IAAI;AAAA;AAAA,UAFlC;AAAA,UADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA;AAAA,WAnBJ;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA,MACA,oDAAC,UACE;AAAA;AAAA,QACD,oDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,eAAmB;AAAA,QACnB,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,eAAS;AAAA,QACiC,oDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,WAJxD;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,SA5BF;AAAA;AAAA;AAAA;AAAA,WA6BA;AAAA,EAEJ;AACF;;;AC3IA;AAAA;AAAA,uBAAAC;AAAA,EAAA,qBAAAC;AAAA,EAAA;AAAA,cAAAC;AAAA;AAAA,IAAAC,gBAAmC,6BAc7BC,0BAAA,kCAVOF,QAAqB,OACzB;AAAA,EACL,OAAO;AAAA,EACP,aAAa;AACf;AAGK,SAASF,iBAAgB;AAC9B,SACE,oDAAC,qBACC,8DAAC,yBAAQ,IAAG,MAAK,uCAAjB;AAAA;AAAA;AAAA;AAAA,SAAwC,KAD1C;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEO,SAASC,eAAc,EAAE,MAAM,GAAQ;AAC5C,SACE,oDAAC,qBAAI,IAAG,WAAU,IAAI,GAAG,IAAI,GAC3B;AAAA,wDAAC,yBAAQ,IAAG,MAAK,MAAK,MAAK,OAAM,SAAQ,0CAAzC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,qBAAI,OAAM,SAAQ,UAAU,IAC1B,gBAAM,WADT;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OANF;AAAA;AAAA;AAAA;AAAA,SAOA;AAEJ;AAIe,SAAR,iBAAkC;AACvC,SACE,oDAAC,qBACC,8DAAC,sBAAK,sDAAN;AAAA;AAAA;AAAA;AAAA,SAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;;;ACxCA;AAAA;AAAA;AAAA;AAAA,mBAA0B,6BAC1BI,gBAA8D,6BAC9D,eAAkB,2BAClBA,iBAAoC;;;ACHpC,IAAAC,gBAA2F,6BAuBnFC,0BAAA;AAlBO,SAAR,eAAgC;AAErC,SACE;AAAA,IAAC;AAAA;AAAA,MACG,QAAI,iCAAkB,SAAS,UAAU;AAAA,MACzC,WAAO,iCAAkB,YAAY,OAAO;AAAA,MAC5C,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,EAAE;AAAA,MACd,UAAS;AAAA,MACT,IAAI,EAAE,MAAM,EAAE;AAAA,MACd,cAAc;AAAA,MACd,OAAO,EAAE,MAAM,QAAQ,IAAI,QAAQ;AAAA,MACnC,aAAa;AAAA,MACb,gBAAe;AAAA,MACf,YAAW;AAAA,MACX,iBAAa,iCAAkB,YAAY,UAAU;AAAA,MACrD,OAAO;AAAA,MAEP;AAAA,QAAC;AAAA;AAAA,UACG,KACA;AAAA,UAEA,QAAO;AAAA;AAAA,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA;AAAA,IApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBA;AAEJ;;;AC7BO,IAAM,wBAAwB,UACxB,iCAAiC,mBACjC,gCAAgC,qBAChC,+BAA+B,oBAE/B,gBAAgB,kFAChB,aAAa,+EAqBb,cAA4B;AAAA,EACzC;AAAA,IACI,OAAO;AAAA,IACP,SAAS;AAAA,MACT;AAAA,QACI,OAAO;AAAA,QACP,UAAU;AAAA,UACV;AAAA,YACI,OAAO;AAAA,YACP,SAAS;AAAA,cACT;AAAA,gBACI,OAAO;AAAA,gBACP,SAAS,CAET;AAAA,gBACA,OAAO;AAAA,cACX;AAAA,YACA;AAAA,YACA,OAAO;AAAA,UACX;AAAA,QACA;AAAA,QACA,OAAO;AAAA,MACX;AAAA,IACA;AAAA,IACA,OAAO;AAAA,EACX;AACA;;;AFhBM,IAAAC,0BAAA;AAhCS,SAAR,qBAAsC;AAE3C,MAAM,CAAC,cAAc,eAAe,QAAI,yBAAS,WAAW,GACtD,CAAC,YAAY,aAAa,QAAI,yBAAS,WAAW;AAExD,gCAAU,MAAM;AACd,YAAQ;AAAA,EACV,GAAG,CAAC,CAAC;AAEL,MAAM,UAAU,YAAY;AAC1B,UAAM,aAAAC,QAAM,IAAI,aAAa,EACtB,KAAK,SAAO;AACX,sBAAgB,IAAI,KAAK,OAAO;AAAA,IAClC,CAAC,GACP,MAAM,aAAAA,QAAM,IAAI,UAAU,EACnB,KAAK,SAAO;AACX,oBAAc,IAAI,KAAK,OAAO;AAAA,IAChC,CAAC;AAAA,EACT,GAEM,CAAC,UAAU,WAAW,QAAI,0BAAW;AAE3C,SACE;AAAA,IAAC;AAAA;AAAA,MACC,eAAc;AAAA,MACd,gBAAe;AAAA,MACf,YAAW;AAAA,MACX,iBAAgB;AAAA,MAChB,WAAU;AAAA,MACV,OAAM;AAAA,MACN,IAAG;AAAA,MAEH;AAAA,4DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,eAAa;AAAA,QACb;AAAA,UAAC;AAAA;AAAA,YACC,KAAI;AAAA,YACJ,KAAK;AAAA,YACL,OAAO;AAAA,YAEP,8DAAC,sBAAK,MAAK,KACT;AAAA,cAAC;AAAA;AAAA,gBACG,MAAO,oDAAC,0BAAU,GAAG,GAAG,GAAG,KAApB;AAAA;AAAA;AAAA;AAAA,uBAAuB;AAAA,gBAC9B,SAAS;AAAA,gBACT,cAAY;AAAA;AAAA,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIA,KALF;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA;AAAA,UAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYA;AAAA,QAEA,oDAAC,sBAAK,OAAM,UAAS,IAAG,MACtB,8DAAC,OAAE,gCAAH;AAAA;AAAA;AAAA;AAAA,eAAmB,KADrB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,oDAAC,sBAAK,UAAS,KAAI,WAAU,QAAO,IAAG,KAAI,oCAA3C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,sBAAK,gBAAe,UAAS,IAAG,KAAI,aAAY,KAAI,YAAW,MAAK,WAAU,YAC3E;AAAA,8DAAC,sBAAK,SAAS,YAAY,QAAQ,IAAG,UAAS,SAAQ,KAAI,iBAAiB,WAAW,SAAS,SAAS,kBAAkB,IAAI,sBAA/H;AAAA;AAAA;AAAA;AAAA,iBAAqI;AAAA,UACrI,oDAAC,sBAAK,SAAS,YAAY,QAAQ,IAAG,UAAS,SAAQ,KAAI,iBAAkB,WAAoB,UAAT,QAAkB,mBAAmB,IAAI,yBAAjI;AAAA;AAAA;AAAA;AAAA,iBAA0I;AAAA,aAF9I;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEE,WA2DA,aAAa,UAAU,IAAI,oDAAC,sBAAK,QAAO,OAAM,0BAAnB;AAAA;AAAA;AAAA;AAAA,eAA6B,IAC1D,aAAa,IAAI,CAAC,aAAc,oDAAC,qBAAI,WAAU,QAAO,IAAG,KACzD;AAAA,8DAAC,sBAAK,gBAAe,iBAAgB,UAAS,MAC5C;AAAA,gEAAC,sBAAK,IAAG,KACP,8DAAC,OAAG,mBAAS,SAAb;AAAA;AAAA;AAAA;AAAA,mBAAmB,KADrB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,oDAAC,sBACE,gBAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,SAAS,KAAK,OAD7D;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UAEC,SAAS,QAAQ;AAAA,YAAI,CAAC,SACrB,oDAAC,sBAAK,gBAAe,iBAAgB,UAAS,MAC5C;AAAA,kEAAC,sBAAK,IAAG,KACN,eAAK,SADR;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,oDAAC,sBACE,gBAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,KAAK,KAAK,OADzD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,UACA;AAAA,aAnB8B;AAAA;AAAA;AAAA;AAAA,eAoBhC,CAAM,IAhFO,WAAW,UAAU,IAAI,oDAAC,sBAAK,QAAO,OAAM,0BAAnB;AAAA;AAAA;AAAA;AAAA,eAA6B,IAC/D,WAAW,IAAI,CAAC,aAAa,oDAAC,qBAC9B;AAAA,8DAAC,sBACC,8DAAC,OAAG,mBAAS,MAAM,YAAY,KAA/B;AAAA;AAAA;AAAA;AAAA,iBAAiC,KADnC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEC,SAAS,QAAQ,IAAI,CAAC,SAAM;AAxEvC;AAyEU,uEAAC,qBAAI,WAAU,QAAO,IAAG,KAAI,IAAG,KAC9B;AAAA,kEAAC,sBAAK,OAAM,YACV,8DAAC,OAAG,eAAK,SAAT;AAAA;AAAA;AAAA;AAAA,qBAAe,KADjB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,eACC,UAAK,aAAL,mBAAe;AAAA,gBAAI,CAAC,WAAQ;AA7EzC,sBAAAC;AA6E4C,iHAC9B;AAAA,wEAAC,sBAAK,gBAAe,iBAAgB,UAAS,MAAK,IAAG,KACpD;AAAA,0EAAC,sBACC,8DAAC,OAAG,iBAAO,SAAX;AAAA;AAAA;AAAA;AAAA,6BAAiB,KADnB;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,sBACA,oDAAC,sBACE,gBAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,OAAO,KAAK,OAD3D;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,yBANF;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA,qBACCA,MAAA,OAAO,YAAP,gBAAAA,IAAgB;AAAA,sBAAI,CAAC,UACpB,oDAAC,sBAAK,IAAG,KAAI,gBAAe,iBAAgB,UAAS,MACjD;AAAA,4EAAC,sBACE,gBAAM,SADT;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,oDAAC,sBACE,gBAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,MAAM,KAAK,OAD1D;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,2BANJ;AAAA;AAAA;AAAA;AAAA,6BAOA;AAAA;AAAA,uBAjB4B;AAAA;AAAA;AAAA;AAAA,yBAmB9B;AAAA;AAAA;AAAA,eAED,UAAK,YAAL,mBAAc;AAAA,gBAAI,CAAC,WAAQ;AAlGxC,sBAAAA;AAmGc,iHACA;AAAA,wEAAC,sBAAK,gBAAe,iBAAgB,UAAS,MAC5C;AAAA,0EAAC,sBACC,8DAAC,OAAG,iBAAO,SAAX;AAAA;AAAA;AAAA;AAAA,6BAAiB,KADnB;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA,sBACA,oDAAC,sBACD,8DAAC,sBACE,gBAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,OAAO,KAAK,OAD3D;AAAA;AAAA;AAAA;AAAA,6BAEA,KAHA;AAAA;AAAA;AAAA;AAAA,6BAIA;AAAA,yBARF;AAAA;AAAA;AAAA;AAAA,2BASA;AAAA,qBACCA,MAAA,OAAO,YAAP,gBAAAA,IAAgB;AAAA,sBAAI,CAAC,UACpB,oDAAC,sBAAK,IAAG,KAAI,gBAAe,iBAAgB,UAAS,MACjD;AAAA,4EAAC,sBACE,gBAAM,SADT;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,wBACA,oDAAC,sBACE,gBAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,MAAM,KAAK,OAD1D;AAAA;AAAA;AAAA;AAAA,+BAEA;AAAA,2BANJ;AAAA;AAAA;AAAA;AAAA,6BAOA;AAAA;AAAA,uBAnBF;AAAA;AAAA;AAAA;AAAA,yBAqBA;AAAA;AAAA;AAAA,iBA/CJ;AAAA;AAAA;AAAA;AAAA,mBAkDA;AAAA,WAAM;AAAA,aAxDuB;AAAA;AAAA;AAAA;AAAA,eAyD/B,CAAM;AAAA;AAAA;AAAA,IA9FV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqHA;AACJ;;;AGpJA;AAAA;AAAA;AAAA;AAAA,IAAAC,iBAeO,6BACPC,gBAKO;;;ACrBP,IAAAC,iBAA0D;;;ACA1D,IAAAC,iBAAuD,6BACvD,yBAAkD,4BAClD,eAWO;AAmFC,IAAAC,0BAAA;AA/ER,aAAAC,MAAQ,SAAS,uBAAU;AAC3B,aAAAA,MAAQ;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEa,SAAR,WAA4B,OAAY;AAG7C,MAAM,UAAU;AAAA,IACd,YAAY;AAAA,IACZ,SAAS;AAAA,MACP,QAAQ;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF,GAEM,kBAAkB,CAAC,UACX,MAAM,aAAa,OAAO,CAAC,SAAgB,KAAK,SAAS,KAAK,EAAE,GAAG,OAI3E,oBAAoB,CAAC,UAAkB;AAC3C,QAAI,QAAQ,MAAM,aAAa,OAAO,CAAC,SAAgB,KAAK,SAAS,KAAK;AAC1E,mBAAQ,IAAI,KAAK,GACV;AAAA,EACT,GAGM,mBAAmB,CAAC,UACjB,MAAM,IAAI,KAAK,aAAa,OAAO,EAAE,OAAO,KAAK,KAGpD,sBAAsB,MACnB,gBAAgB,YAAY,IAAE,gBAAgB,mBAAmB,IAAI,KAG1E,kBAA2B;AAE/B,UAAO,MAAM,eAAe;AAAA,IAC1B,KAAK;AACH,wBAAkB;AAClB;AAAA,IACF,KAAK;AACH,wBAAkB;AAClB;AAAA,IACF,KAAK;AACH,wBAAkB;AAClB;AAAA,IACF,KAAK;AACH,wBAAkB;AAClB;AAAA,EACJ;AAEA,MAAI,yBAAwC,CAAC,GAGzC,yBAAwC,CAAC;AAE7C,SACE;AAAA,IAAC;AAAA;AAAA,MACC,cAAa;AAAA,MACb,WAAU;AAAA,MACV,WAAU;AAAA,MACV,GAAE;AAAA,MACF,GAAE;AAAA,MACF,iBAAgB;AAAA,MAEhB;AAAA,4DAAC,uBAAK,IAAG,OACP,8DAAC,OAAG,gBAAM,iBAAV;AAAA;AAAA;AAAA;AAAA,eAAwB,KAD1B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,uBAAK,IAAG,MAAK,IAAG,KAAI,UAAS,MAC3B,6BADH;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEC,MAAM,kBAAkB,iCACrB,oDAAC,sBAAI,UAAS,MACZ;AAAA,8DAAC,uBAAK,UAAS,MACb,8DAAC,OAAE,+BAAH;AAAA;AAAA;AAAA;AAAA,iBAAkB,KADpB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,uBAAK,gBAAe,iBACnB;AAAA,gEAAC,uBAAK,wBAAN;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,oDAAC,uBAAK,+BAAN;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UACA,oDAAC,uBAAK,gBAAe,iBACnB;AAAA,gEAAC,uBAAK,8BAAN;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,oDAAC,uBAAK,+BAAN;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,aAnBF;AAAA;AAAA;AAAA;AAAA,eAoBA,IACE;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA,QAEP,MAAM,kBAAkB,wBACzB,wFACA;AAAA,8DAAC,uBAAK,UAAS,MAAK,IAAG,KACrB,8DAAC,OAAG,2BAAiB,gBAAgB,YAAY,CAAC,KAAlD;AAAA;AAAA;AAAA;AAAA,iBAAoD,KADtD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,gBAAe;AAAA,cACf,IAAG;AAAA,cAEH;AAAA,oEAAC,sBAAI,WAAU,UAAS,kBAAkB,GAAG,iBAAgB,YAAW,MAAK,KAC3E;AAAA,sEAAC,uBAAK,UAAS,MAAK,IAAG,KAAI,iCAA3B;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBACA,oDAAC,uBAAK,IAAG,KACP,8DAAC,OAAG,2BAAiB,gBAAgB,mBAAmB,CAAC,KAAzD;AAAA;AAAA;AAAA;AAAA,yBAA2D,KAD7D;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,uBAOD;AAAA,gBACA,oDAAC,sBAAI,mBAAmB,GAAG,WAAU,UAAS,iBAAgB,WAAU,MAAK,KAC1E;AAAA,sEAAC,uBAAK,UAAS,MAAK,IAAG,KAAI,uCAA3B;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBACA,oDAAC,uBACC,8DAAC,OAAG,2BAAiB,gBAAgB,uBAAuB,IAAE,MAAM,gBAAgB,OAAO,CAAE,KAA7F;AAAA;AAAA;AAAA;AAAA,yBAA+F,KADjG;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,qBANH;AAAA;AAAA;AAAA;AAAA,uBAOC;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAoBA;AAAA,aAxBA;AAAA;AAAA;AAAA;AAAA,eAyBA,IAAK;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA,QAEN,MAAM,iBAAiB,wBACtB,oDAAC,sBAAI,UAAS,MACZ;AAAA,8DAAC,uBAAK,UAAS,MAAK,IAAG,KACrB,8DAAC,OAAE,mDAAH;AAAA;AAAA;AAAA;AAAA,iBAAsC,KADxC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAEA,oDAAC,uBAAK,gBAAe,iBACnB;AAAA,gEAAC,sBAAI,iBAAgB,YAAW,OAAM,KAAI,QAAO,KAAI,IAAG,KAAI,IAAG,OAA/D;AAAA;AAAA;AAAA;AAAA,mBAAmE;AAAA,YACnE,oDAAC,uBAAK,gBAAe,iBAAgB,MAAM,GACzC,8DAAC,uBACE,qBAAW,oBAAoB,EAAE,QAAQ,CAAC,SAD7C;AAAA;AAAA;AAAA;AAAA,mBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UACA,oDAAC,uBAAK,gBAAe,iBACnB;AAAA,gEAAC,sBAAI,iBAAgB,OAAM,OAAM,KAAI,QAAO,KAAI,IAAG,KAAI,IAAG,OAA1D;AAAA;AAAA;AAAA;AAAA,mBAA8D;AAAA,YAC9D,oDAAC,uBAAK,gBAAe,iBAAgB,MAAM,GACzC,8DAAC,uBACA,yCAA+B,MAAM,oBAAoB,GAAG,QAAQ,CAAC,SADtE;AAAA;AAAA;AAAA;AAAA,mBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UAEA,oDAAC,2BAAS,UAAS,UAAS,OAAO,oBAAoB,GAAG,iBAAgB,OAAM,QAAO,QAAO,IAAG,KAAI,IAAG,KAAI,kBAAkB,GAAG,mBAAmB,KAApJ;AAAA;AAAA;AAAA;AAAA,iBAAsJ;AAAA,UACtJ,oDAAC,sBAAI,OAAM,QAAO,QAAO,KAAI,iBAAgB,cAA7C;AAAA;AAAA;AAAA;AAAA,iBAAwD;AAAA,UACxD,oDAAC,uBAAK,UAAS,MAAK,IAAG,KAAI,OAAM,UAAS,uCAA1C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aA1BF;AAAA;AAAA;AAAA;AAAA,eA4BA,IACD;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA,QAEF,MAAM,kBAAkB,+BACzB,wFACE;AAAA,8DAAC,uBAAK,UAAS,MACb,8DAAC,OAAG,2BAAiB,gBAAgB,kBAAkB,CAAC,KAAxD;AAAA;AAAA;AAAA;AAAA,iBAA0D,KAD5D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,uBAAK,UAAS,MAAK,IAAI,GAAG,OAAM,UAC/B,8DAAC,OAAE,mDAAH;AAAA;AAAA;AAAA;AAAA,iBAAsC,KADxC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACC,MAAM,gBAAgB,OAAY,oDAAC,uBAAK,0BAAN;AAAA;AAAA;AAAA;AAAA,iBAAgB,IACjD;AAAA,YAAC;AAAA;AAAA,cACD,MACE;AAAA,gBACE,QAAQ,CAAC,0BAA0B;AAAA,gBACnC,UAAU;AAAA,kBACR;AAAA,oBACE,OAAO;AAAA,oBACP,MAAM,CAAC,gBAAgB,kBAAkB,CAAC;AAAA,oBAC1C,iBAAiB;AAAA,sBACf;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,sBACX;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,kBACf;AAAA,kBACA;AAAA,oBACE,OAAO;AAAA,oBACP,MAAM,CAAC,gBAAgB,YAAY,CAAC;AAAA,oBACpC,iBAAiB;AAAA,sBACf;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,sBACX;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,kBACf;AAAA,kBAEA;AAAA,oBACE,OAAO;AAAA,oBACP,MAAM,CAAC,gBAAgB,kBAAkB,CAAC;AAAA,oBAC1C,iBAAiB;AAAA,sBACf;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,sBACX;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,kBACf;AAAA,gBAEF;AAAA,cACF;AAAA,cAEF;AAAA,cACA,QAAO;AAAA;AAAA,YA5CP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA6CF;AAAA,aArDF;AAAA;AAAA;AAAA;AAAA,eAsDA,IACA;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA,QAED,MAAM,kBAAkB,gCACzB,oDAAC,sBACC;AAAA,8DAAC,uBAAK,UAAS,MAAK,IAAG,KACrB,8DAAC,OAAG,2BAAiB,gBAAgB,OAAO,CAAC,KAA7C;AAAA;AAAA;AAAA;AAAA,iBAA+C,KADjD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,MACE;AAAA,gBACE,QAAQ;AAAA,gBACR,UAAU;AAAA,kBACR;AAAA,oBACE,OAAO;AAAA,oBACP,MAAM;AAAA,oBACN,iBAAiB;AAAA,sBACf;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,sBACX;AAAA,sBACA;AAAA,sBACA;AAAA,sBACA;AAAA,oBACF;AAAA,oBACA,aAAa;AAAA,kBACf;AAAA,gBACF;AAAA,cACF;AAAA,cAEF;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA0BA;AAAA,UACA,oDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,oDAAC,sBAAI,IAAG,KACL,gBAAM,gBAAgB,OAAY;AAAA;AAAA;AAAA;AAAA,iBAAE,IACnC,kBAAkB,OAAO,EAAE,GAAG,QAAQ;AAAA,YAAI,CAAC,UAC3C,uBAAuB,KAAK,KAAK,KAAK,GACtC,uBAAuB,KAAK,KAAK,KAAK,GAC/B,oDAAC,uBAAK,gBAAe,iBAC1B;AAAA,kEAAC,uBACE,eAAK,SADR;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,oDAAC,uBACE,2BAAiB,KAAK,KAAK,KAD9B;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBANK;AAAA;AAAA;AAAA;AAAA,mBAOP;AAAA,UAEA,KAdJ;AAAA;AAAA;AAAA;AAAA,iBAiBA;AAAA,aAjDF;AAAA;AAAA;AAAA;AAAA,eAkDA,IACE;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA;AAAA;AAAA,IAjNN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkNA;AAEJ;;;ADhQQ,IAAAC,0BAAA;AAtCO,SAARC,oBAAoC,OAAY;AACrD,MAAM,OAAO;AAAA,IACX,QAAQ,CAAC,OAAO,QAAQ,UAAU,SAAS,UAAU,QAAQ;AAAA,IAC7D,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,MAAM,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,QACzB,iBAAiB;AAAA,UACf;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,aAAa;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,aAAa;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,eAAc;AAAA,MACd,gBAAe;AAAA,MACf,YAAW;AAAA,MACX,iBAAgB;AAAA,MAChB,WAAU;AAAA,MACV,OAAM;AAAA,MAEN;AAAA,4DAAC,uBAAK,OAAM,UAAS,IAAG,KACtB,8DAAC,OAAE,gCAAH;AAAA;AAAA;AAAA;AAAA,eAAmB,KADrB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,uBAAK,UAAS,KAAI,WAAU,QAAO,IAAG,KAAI,oCAA3C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEA,oDAAC,cAAW,eAAe,uBAAuB,cAAc,MAAM,gBAAtE;AAAA;AAAA;AAAA;AAAA,eAAmF;AAAA,QACnF,oDAAC,cAAW,eAAe,+BAA+B,cAAc,MAAM,gBAA9E;AAAA;AAAA;AAAA;AAAA,eAA2F;AAAA,QAC3F,oDAAC,cAAW,eAAe,8BAA8B,cAAc,MAAM,gBAA7E;AAAA;AAAA;AAAA;AAAA,eAA2F;AAAA,QAI3F,oDAAC,uBAAK,cAAa,MAAK,iBAAgB,YAAW,IAAG,KAAI,OAAM,SAAQ,GAAE,KAAI,aAAY,QAAO,MAAK,iBAAgB,6CAAtH;AAAA;AAAA;AAAA;AAAA,eAAmJ;AAAA;AAAA;AAAA,IArBrJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA;AAEJ;;;ADnCA,IAAAC,iBAAoC,kBACpCC,gBAAkB;AAkEE,IAAAC,0BAAA;AA/DL,SAAR,oBAAqC;AAC1C,MAAM,EAAE,QAAQ,SAAS,QAAI,8BAAc,GAErC,CAAC,cAAc,eAAe,QAAI,yBAAS,WAAW,GACtD,CAAC,YAAY,aAAa,QAAI,yBAAS,WAAW;AAExD,gCAAU,MAAM;AACd,YAAQ;AAAA,EACV,GAAG,CAAC,CAAC;AAGL,MAAM,UAAU,YAAY;AAC1B,UAAM,cAAAC,QAAM,IAAI,aAAa,EACtB,KAAK,SAAO;AACX,sBAAgB,IAAI,KAAK,OAAO;AAAA,IAClC,CAAC,GACP,MAAM,cAAAA,QAAM,IAAI,UAAU,EACnB,KAAK,SAAO;AACX,oBAAc,IAAI,KAAK,OAAO;AAAA,IAChC,CAAC;AAAA,EACT;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,SAAQ;AAAA,MACR,YAAW;AAAA,MACX,gBAAe;AAAA,MACf,OAAM;AAAA,MACN,YAAW;AAAA,MAEX;AAAA,QAAC;AAAA;AAAA,UACC,UAAS;AAAA,UACT,OAAO,EAAE,MAAM,QAAQ,IAAI,QAAQ;AAAA,UACnC,aAAY;AAAA,UACZ,WAAU;AAAA,UACV,UAAS;AAAA,UACT,IAAG;AAAA,UAEH;AAAA,YAAC;AAAA;AAAA,cACC,SAAS;AAAA,cAET;AAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,QAAI,kCAAkB,SAAS,UAAU;AAAA,oBACzC,WAAO,kCAAkB,YAAY,OAAO;AAAA,oBAC5C,MAAM;AAAA,oBACN,IAAI,EAAE,MAAM,EAAE;AAAA,oBACd,UAAS;AAAA,oBACT,IAAI,EAAE,MAAM,EAAE;AAAA,oBACd,cAAc;AAAA,oBACd,OAAO,EAAE,MAAM,QAAQ,IAAI,QAAQ;AAAA,oBACnC,aAAa;AAAA,oBACb,iBAAa,kCAAkB,YAAY,UAAU;AAAA,oBACrD,OAAO;AAAA,oBAEP;AAAA;AAAA,wBAAC;AAAA;AAAA,0BACC,MAAM,EAAE,MAAM,EAAE;AAAA,0BAChB,IAAI,EAAE,MAAM,GAAG;AAAA,0BACf,SAAS,EAAE,MAAM,OAAO;AAAA,0BAExB;AAAA,4BAAC;AAAA;AAAA,8BACC,SAAS;AAAA,8BACT,MACE,SACE,oDAAC,2BAAU,GAAG,GAAG,GAAG,KAApB;AAAA;AAAA;AAAA;AAAA,qCAAuB,IAEvB,oDAAC,+BAAc,GAAG,GAAG,GAAG,KAAxB;AAAA;AAAA;AAAA;AAAA,qCAA2B;AAAA,8BAG/B,SAAS;AAAA,8BACT,cAAY;AAAA;AAAA,4BAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAWA;AAAA;AAAA,wBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAiBA;AAAA,sBACA,oDAAC,uBAAK,MAAM,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,MAAM,SAAS,GACjD,8DAAC,sBACC;AAAA,wBAAC;AAAA;AAAA,0BACC,KACE;AAAA,0BAEF,QAAO;AAAA;AAAA,wBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKA,KANF;AAAA;AAAA;AAAA;AAAA,6BAOA,KARF;AAAA;AAAA;AAAA;AAAA,6BASA;AAAA,sBAEA;AAAA,wBAAC;AAAA;AAAA,0BACC,MAAM,EAAE,MAAM,EAAE;AAAA,0BAChB,SAAS;AAAA,0BACT,WAAW;AAAA,0BACX,SAAS;AAAA;AAAA,wBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKC;AAAA;AAAA;AAAA,kBA/CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAgDA;AAAA,gBACA,oDAAC,2BAAS,IAAI,QAAQ,gBAAc,IAClC,8DAAC,eAAD;AAAA;AAAA;AAAA;AAAA,uBAAW,KADb;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACC,aAAa,UAAU,KAAK,WAAW,UAAU,IAAI,oDAAC,uBAAK,OAAM,UAAS,0BAArB;AAAA;AAAA;AAAA;AAAA,uBAA+B,IAAU,oDAACC,qBAAA,EAAmB,cAA4B,cAAhD;AAAA;AAAA;AAAA;AAAA,uBAAuE;AAAA;AAAA;AAAA,YAvDxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAyDA;AAAA;AAAA,QAjEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkEA;AAAA;AAAA,IAzEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA0EA;AAEJ;AAEA,IAAM,YAAY,MAEd,oDAAC,wBAAM,QAAI,kCAAkB,SAAS,UAAU,GAAG,GAAG,GACnD,oBAAU,IAAI,CAAC,YACd,oDAAC,iBAAmC,GAAG,WAAnB,QAAQ,OAA5B;AAAA;AAAA;AAAA;AAAA,OAAgD,CACjD,KAHH;AAAA;AAAA;AAAA;AAAA,OAIA,GAIE,gBAAgB,CAAC,EAAE,OAAO,UAAU,KAAK,MAAe;AAC5D,MAAM,EAAE,QAAQ,SAAS,QAAI,8BAAc;AAE3C,SACE,oDAAC,wBAAM,SAAS,GAAG,SAAS,YAAY,UACtC;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM,QAAQ;AAAA,QACd,SAAS;AAAA,QACT,OAAO;AAAA,QACP,QAAQ;AAAA,UACN,gBAAgB;AAAA,QAClB;AAAA,QAEA;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,YAAY;AAAA,cACZ,WAAO,kCAAkB,YAAY,UAAU;AAAA,cAE9C;AAAA;AAAA,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,UACC,YACC;AAAA,YAAC;AAAA;AAAA,cACC,IAAI;AAAA,cACJ,YAAY;AAAA,cACZ,WAAW,SAAS,mBAAmB;AAAA,cACvC,GAAG;AAAA,cACH,GAAG;AAAA;AAAA,YALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMA;AAAA;AAAA;AAAA,MAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAyBA;AAAA,IAEA,oDAAC,2BAAS,IAAI,QAAQ,gBAAc,IAAC,OAAO,EAAE,WAAW,cAAc,GACrE;AAAA,MAAC;AAAA;AAAA,QACC,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,iBAAa,kCAAkB,YAAY,UAAU;AAAA,QACrD,OAAO;AAAA,QAEN,sBACC,SAAS,IAAI,CAAC,UACZ,oDAAC,uBAAuB,IAAI,GAAG,MAAM,MAAM,MACxC,gBAAM,SADE,MAAM,OAAjB;AAAA;AAAA;AAAA;AAAA,eAEA,CACD;AAAA;AAAA,MAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA,KAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,OA5CF;AAAA;AAAA;AAAA;AAAA,SA6CA;AAEJ,GASM,YAA4B;AAAA,EAChC;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF;;;AG/MA,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAK,kBAAmB,GAAI,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,QAAO,MAAO,gBAAe,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,2BAA0B,EAAC,IAAK,2BAA0B,UAAW,QAAO,MAAO,oBAAmB,OAAQ,QAAU,eAAgB,QAAU,QAAS,8CAA6C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAK,kBAAmB,GAAI,EAAC,GAAE,KAAM,8BAA6B;;;ACOr2C,IAAM,uBAAuB,gBACvB,SAAS,EAAC,SAAU,GAAK,GACzB,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,2BAA2B;AAAA,IACvB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_react", "createCache", "createEmotionServer", "import_react", "import_jsx_dev_runtime", "React", "CatchBoundary", "ErrorBoundary", "meta", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "axios", "_a", "import_react", "import_icons", "import_react", "import_react", "import_jsx_dev_runtime", "ChartJS", "import_jsx_dev_runtime", "DashboardContainer", "import_react", "import_axios", "import_jsx_dev_runtime", "axios", "DashboardContainer"]
}
